{"version":3,"sources":["gamecontrol.js"],"names":["getObjectFromLocalStorage","key","jsonString","localStorage","getItem","JSON","parse","checkAndSaveOrUpdateObject","storageKey","newData","data","storedObject","console","stringify","setItem","fullscreen","$","bridge","fullScreen","timeout","interval","onInactive","let","clearTimeout","setTimeout","resetTimer","log","on","startTimer","clearLocalStorage","clear","document","ready","e","user","point","gameName","game","current","handlerGameDB","email","setupInactivityChecker","navigate","goto"],"mappings":"AAAA,SAASA,0BAA0BC,GAC3BC,EAAaC,aAAaC,QAAQH,CAAG,EAC3C,OAAOC,EAAaG,KAAKC,MAAMJ,CAAU,EAAI,IAC/C,CAEA,SACEK,2BAAAC,EAAAC,GAEA,IAAIC,EAAOC,0BAAeH,CAAA,EAAEE,EAAGC,EAAY,CAAA,GAAAA,EAAA,GAAAF,CAAA,EAAAA,EAIrCP,GAHNU,QADgDH,OAAAA,EAAAA,WAAAA,oBAAAA,CAAAA,EAI7BJ,KAAKQ,UAAUH,CAAI,GADtCP,aAAAW,QAAAN,EAAAN,CAAA,CAGF,CAAA,SAAAa,aAEAC,EAAA,aAASD,EAAUA,GAAG,QAAA,WAClBE,OAAAC,WAAkB,CAEpB,CAAC,CACH,CA6BA,SACMC,uBAAOC,EAAAC,GAEXC,IAAAH,EAAA,SAEEI,IAEAA,aAAAJ,CAAA,EACAA,EAMMK,WAAOH,WALXT,QAMES,IACF,sDACCD,EAAW,IAChB,YALI,EAOJ,YAAA,OAAAC,GACAA,EAASI,CAET,EAAAL,CAAA,CALA,CAeAR,EAAAA,QAAQc,EAAIC,GAAA,mBAZZ,WAOAC,EAAA,CACAA,CAIuC,EAJvCA,EAAW,CACb,CAEA,SAASC,oBACPjB,QAAQc,IAAI,0BAA0B,EACtCvB,aAAa2B,MAAM,CACrB,CA9DAd,EAAEe,QAAQ,EAAEC,MAAM,WAChBjB,WAAW,EAIXC,EAAE,MAAM,EAAEW,GAAG,oBAAqB,SAAUM,EAAGzB,EAAYC,GACzDF,2BAA2BC,EAAYC,CAAO,CAChD,CAAC,EAEDO,EACE,MAAMkB,EAAAA,GAAI,OAAGlC,SAAAA,EAAAA,EAAyBmC,GACtC,IAAMC,EAAAA,0BAAwB,MAAA,EAE9B7B,EAAAA,OAA0B8B,EAA1B9B,2BAEW,OAAA,EADR6B,GACoBD,EAArBG,QAA8BH,CAAAA,KAAAA,EAAAA,MAAAA,CAAAA,CAChC,CAAC,EAADlB,OAAEsB,cAAAL,EAAAM,MAAAJ,EAAAD,CAAA,EACFlB,SAAOsB,KAAAA,YAAmBC,CAE5B,CAAC,EAEDC,uBAAuB,IAAW,WAChCC,SAASC,KAAK,SAAS,CAEzB,CAAC,CACH,CAAC","file":"gamecontrol.js","sourcesContent":["function getObjectFromLocalStorage(key) {\n  const jsonString = localStorage.getItem(key);\n  return jsonString ? JSON.parse(jsonString) : null;\n}\n\nfunction checkAndSaveOrUpdateObject(storageKey, newData) {\n  // Recuperar o objeto do localStorage\n  const storedObject = getObjectFromLocalStorage(storageKey);\n  let data = storedObject ? { ...storedObject, ...newData } : newData;\n  console.log(`${storedObject ? \"Updating\" : \"Creating\"} stored`, data);\n\n  // Salvar o objeto atualizado ou novo no localStorage\n  const jsonString = JSON.stringify(data);\n  localStorage.setItem(storageKey, jsonString);\n}\n\nfunction fullscreen() {\n  $(\".fullscreen\").on(\"click\", function () {\n    bridge.fullScreen();\n  });\n}\n\n$(document).ready(function () {\n  fullscreen();\n\n  // navigate.goto(`01_capa`); /// sempre abre o curso na capa\n\n  $(\"body\").on(\"setOrUpdateObject\", function (e, storageKey, newData) {\n    checkAndSaveOrUpdateObject(storageKey, newData);\n  });\n\n  $(\"body\").on(\"game\", function (e, game, point) {\n    const user = getObjectFromLocalStorage(\"user\");\n    const gameName = \"game\" + game;\n\n    checkAndSaveOrUpdateObject(\"user\", {\n      [gameName]: point,\n      current: { game: game, point: point },\n    });\n    bridge.handlerGameDB(user.email, gameName, point);\n    navigate.goto(`05_ranking`);\n  });\n\n  setupInactivityChecker(1000 * 50, function () {\n    navigate.goto(`01_capa`);\n    // Coloque aqui qualquer outra ação que você deseja executar após 30 segundos de inatividade\n  });\n});\n\nfunction setupInactivityChecker(interval, onInactive) {\n  let timeout;\n\n  function startTimer() {\n    // Clear any existing timeout to avoid multiple timers running\n    clearTimeout(timeout);\n\n    // Set a new timeout to check for inactivity after the specified interval\n    timeout = setTimeout(function () {\n      console.log(\n        \"Nenhuma interação do usuário detectada nos últimos \" +\n          interval / 1000 +\n          \" segundos.\"\n      );\n      if (typeof onInactive === \"function\") {\n        onInactive();\n      }\n    }, interval); // Intervalo em milissegundos\n  }\n\n  // Função para resetar o timer a cada clique ou toque\n  function resetTimer() {\n    startTimer();\n  }\n\n  // Escute os eventos de clique e toque em todo o documento\n  $(document).on(\"click touchstart\", resetTimer);\n\n  // Inicie o timer inicialmente quando a página carregar\n  startTimer();\n}\n\nfunction clearLocalStorage() {\n  console.log(\"entrou clearLocalStorage\");\n  localStorage.clear();\n}\n"]}