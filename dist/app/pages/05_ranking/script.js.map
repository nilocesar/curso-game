{"version":3,"sources":["script.js"],"names":["$","document","ready","setTimeout","bridge","listRankingDB","results","console","log","controlRanking","addClass","inserirNome","text","blink","textAnima","let","index","intervaloRef","current","blinkIntervalRef","$spanText","setInterval","clearInterval","displayedText","slice","email","getObjectFromLocalStorage","jsonString","currentUser","find","it","id","data","maior","currentPointMax","parse","localStorage","getItem","user","point","game1","game2","game3","game","ellipsis","lines","filter","desativo","indice","buttonHTML","item","nome","name","append","on","this","css","error"],"mappings":"AAAAA,EAAEC,QAAQ,EAAEC,MAAM,WAChBC,WAAW,KACTC,OAAOC,cAAeC,IACpBC,QAAQC,IAAIF,CAAO,EACnBG,eAAeH,CAAO,EACtBN,EAAE,YAAY,EAAEU,SAAS,MAAM,CACjC,CAAC,CACH,EAAG,GAAQ,EAyCXC,CArCE,MAAMC,EAASZ,EAAA,UAAYY,EAIvBC,EAFEC,EAAS,UAAS,EAAAF,KAAA,EAGxBG,IAAAC,EAAMC,EAAiBC,EAAS,CAAA,EAAK,MAACD,EAAA,CAAAC,QAAA,IAAA,EAChCC,EAAmB,CAAAD,QAAA,IAAA,EAGzBE,EAAUR,KAAK,EAAE,EAcjBK,EAAaC,QAAUG,YAAY,WADnCL,EAAAA,EACaE,EAAUG,SACrBL,cAAOC,EAAAC,OAAA,EACPI,cAAYR,EAAkBI,OAAA,EAC5BI,EAAAA,KAAcL,CAAAA,EAIlB,EAAG,GAFCG,EAKJD,EAAiBD,QAAUG,YArB3B,WADAN,IAAAQ,EAAAT,EAAAU,MAAA,EAAAR,CAAA,EACAH,EACEO,EAAIG,KAAaA,EAAaC,GAAM,EAElCJ,EAAUR,KAAKW,EAAgB,GAAG,EAIpCV,EAFEO,CAAAA,CAGJ,EAa6D,GAAG,CAItD,CACd,CAAC,EAAD,MAAEX,eAAAH,IAGA,MAAAmB,EAAAC,0BAAA,MAAA,EAAA,MACA,IAeMC,EAfNF,GAMAG,EAAAtB,EAAAuB,KAAAC,GAAAA,EAAAC,KAAAN,CAAA,IAOAG,EAAAI,KAAAC,MACMC,EAAAA,aAAkBN,QAAgB,MAAM,EACxCD,EAAAA,KAAUQ,MAAGC,CAAaC,EAAAA,QAUhCrC,EAAE,eAAe,EAAEY,KAAK0B,EAAKC,KAAK,EAClCvC,EAAE,cAAc,EAAEY,KARD,CACf4B,MAAO,iBACPC,MAAO,aACPC,MAAO,qBACT,EAIgC,OAASJ,EAAKK,KAAK,EAGnD3C,EAAE,OAAO,EAAE4C,SAAS,CAAAC,MAAA,CAAA,CAAA,EAGpBvC,EADAwC,OAAAhB,GAAA,CAAAA,EAAAE,KAAAe,QAAA,EACAzC,QACGwC,CAAAA,EAAUE,KAGHC;mDACuCD,iBAMnDE,EAAAlB,KAAAmB,MAAAD,EAAAlB,KAAAoB,sBACAF,EAAAlB,KACgCgB,sBAChCE,EAAAlB,KAAAQ,OAAA,oBACAU,EAAAlB,KAA+BkB,OAAUjB,oBAEzCiB,EAAAlB,KAAAU,OAAA;;gCAJgCM,EAAS,EAAI,GAAK,IAAM,KAAKA,EAAS;8BAShEE,EAAAlB,KAAAmB,MAAAD,EAAAlB,KAAAoB;+BAC0BC,EAAMrB,KAACiB,SACjC,GAAAC,EAAAlB,KAAAC,MAAA,QAAA;;;mBAOFjC,EAAA,sBAA0B,EAACqD,OAAQJ,CAAA,CACnC,CAAA,EALFjD,EAQE,eAAA,EAAAsD,GAAA,QAAA,WAEAtD,IAAEmD,EAAAnD,EAAauD,IAAE3C,EAAIoB,KAAK,MAAC,EAEzBQ,GADAxC,EAAeuD,IAAC3C,EAAK4B,KAAK,QAAC,EAC3BxC,EAAcuD,IAAE3C,EAAIoB,KAACS,OAAM,GAC3BA,EAAAzC,EAAcuD,IAAE3C,EAAIoB,KAACU,OAAM,EAC7BA,EAAA1C,EAAAuD,IAAA,EAAAvB,KAAA,OAAA,EALAhC,EAAE,OAAO,EAAEwD,IAAI,UAAW,MAAM,EAChCxD,EAAE,aAAa,EAAEY,KAAKuC,CAAI,EAC1BnD,EAAE,cAAc,EAAEY,KAAK4B,CAAK,EAC5BxC,EAAE,cAAc,EAAEY,KAAK6B,CAAK,EAC5BzC,EAAE,cAAc,EAAEY,KAAK8B,CAAK,CAC9B,CAAC,GAjEDnC,QAAKqB,MAAW,8CAAE,EAPlBrB,QAAUkD,MAAE,uCAAA,CAyEd","file":"script.js","sourcesContent":["$(document).ready(function () {\n  setTimeout(() => {\n    bridge.listRankingDB((results) => {\n      console.log(results);\n      controlRanking(results);\n      $(\".preloader\").addClass(\"hide\");\n    });\n  }, 1000 * 3);\n\n  function inserirNome() {\n    const $spanText = $(\".textDig\");\n    const text = $(\".textDig\").text();\n\n    const textAnima = text; // Defina a variável textAnima com o nome desejado\n    let index = 0;\n    let blink = true;\n    const intervaloRef = { current: null };\n    const blinkIntervalRef = { current: null };\n\n    // Limpa o conteúdo existente e prepara a animação\n    $spanText.text(\"\");\n\n    // Função para atualizar o texto com o efeito de cursor piscando\n    function updateTextWithCursor() {\n      let displayedText = textAnima.slice(0, index);\n      if (blink) {\n        $spanText.text(displayedText + \"|\");\n      } else {\n        $spanText.text(displayedText + \" \");\n      }\n      blink = !blink;\n    }\n\n    // Inicia o intervalo para animar a inserção das letras\n    intervaloRef.current = setInterval(function () {\n      index++;\n      if (index > textAnima.length) {\n        clearInterval(intervaloRef.current);\n        clearInterval(blinkIntervalRef.current);\n        $spanText.text(textAnima); // Remove o cursor final\n      }\n    }, 180); // Ajuste o tempo para digitação\n\n    // Inicia o intervalo para o cursor piscando\n    blinkIntervalRef.current = setInterval(updateTextWithCursor, 150); // Ajuste o tempo para piscar\n  }\n\n  // Chama a função para inserir o nome com a animação\n  inserirNome();\n});\n\nconst controlRanking = (results) => {\n  // Obtém o email do usuário a partir do localStorage\n  const email = getObjectFromLocalStorage(\"user\")[\"email\"];\n  if (!email) {\n    console.error(\"Email não encontrado no localStorage.\");\n    return;\n  }\n\n  // Encontra o usuário atual nos resultados com base no email\n  const currentUser = results.find((it) => it.id === email);\n  if (!currentUser) {\n    console.error(\"Usuário atual não encontrado nos resultados.\");\n    return;\n  }\n\n  // Obtém a maior pontuação do usuário atual\n  const currentPointMax = currentUser.data.maior;\n  const jsonString = localStorage.getItem(\"user\");\n  const user = JSON.parse(jsonString).current;\n\n  const gameName = {\n    game1: \"Cursos ao Vivo\",\n    game2: \"Cerficação\",\n    game3: \"Cursos Online (EAD)\",\n  };\n\n  // Atualiza o texto da pontuação atual no elemento com a classe 'currentScore'\n  $(\".currentScore\").text(user.point);\n  $(\".currentGame\").text(gameName[\"game\" + user.game]);\n\n  // Aplica a função ellipsis nos elementos com a classe 'nome'\n  $(\".nome\").ellipsis({ lines: 1 });\n\n  // Filtra os resultados para excluir os desativados e adiciona os botões de ranking\n  results\n    .filter((it) => !it.data.desativo)\n    .forEach((item, indice) => {\n      // Cria o HTML do botão de ranking\n      const buttonHTML = `\n        <button class=\"rankingScore\" data-index=\"${indice}\" data-nome=\"${\n        item.data.nome || item.data.name\n      }\" data-pontos=\"${item.data.maior}\" data-game1=\"${\n        item.data.game1 || \"-\"\n      }\" data-game2=\"${item.data.game2 || \"-\"}\" data-game3=\"${\n        item.data.game3 || \"-\"\n      }\">\n          <div class=\"datBase\">\n            <p class=\"number\">${indice + 1 < 10 ? \"0\" : \"\"}${indice + 1}</p>\n            <p class=\"nome\">${item.data.nome || item.data.name}</p>\n            <p class=\"point\">${item.data.maior} ${\n        item.data.maior == 1 ? \"ponto\" : \"pontos\"\n      }</p>\n          </div>\n          <div class=\"ico\"></div>\n        </button>`;\n\n      // Adiciona o botão de ranking ao DOM\n      $(\".ranking .boxRanking\").append(buttonHTML);\n    });\n\n  // Adiciona um evento de clique a cada botão de ranking\n  $(\".rankingScore\").on(\"click\", function () {\n    // Obtém os dados do item clicado a partir dos atributos data do botão\n    const nome = $(this).data(\"nome\");\n    const pontos = $(this).data(\"pontos\");\n    const game1 = $(this).data(\"game1\");\n    const game2 = $(this).data(\"game2\");\n    const game3 = $(this).data(\"game3\");\n\n    // Exibe o modal e atualiza as informações do jogador no modal\n    $(\"#pop1\").css(\"display\", \"flex\");\n    $(\"#pop1 .nome\").text(nome);\n    $(\"#pop1 .game1\").text(game1);\n    $(\"#pop1 .game2\").text(game2);\n    $(\"#pop1 .game3\").text(game3);\n  });\n};\n"]}